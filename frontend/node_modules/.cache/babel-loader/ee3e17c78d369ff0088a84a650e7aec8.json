{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar CharTypesEnum_1 = require(\"../constants/CharTypesEnum\");\n\nvar copyMaskChar = function (count, maskChar) {\n  var res = [];\n\n  for (var i = 0; i < count; i++) {\n    res.push({\n      char: maskChar,\n      type: CharTypesEnum_1.CharTypes.MASK\n    });\n  }\n\n  return res;\n};\n\nvar pasteMaskSymbols = function (maskString, maskChar, selection) {\n  if (maskString) {\n    var res = [];\n\n    for (var i = selection.start; i < selection.end; i++) {\n      res.push({\n        char: maskString[i],\n        type: CharTypesEnum_1.CharTypes.MASK\n      });\n    }\n\n    return res;\n  }\n\n  return copyMaskChar(selection.end - selection.start, maskChar);\n};\n\nfunction removeSelectedRange(param) {\n  var value = param.value,\n      selection = param.selection,\n      maskChar = param.maskChar,\n      maskString = param.maskString;\n\n  if (selection.end < selection.start) {\n    var tmp = selection.end;\n    selection.end = selection.start;\n    selection.start = tmp;\n  }\n\n  if (selection.start === selection.end) {\n    return value;\n  }\n\n  if (value.length > selection.start) {\n    return value.slice(0, selection.start).concat(pasteMaskSymbols(maskString, maskChar, selection), value.slice(selection.end, value.length));\n  }\n\n  return value;\n}\n\nexports.default = removeSelectedRange;","map":{"version":3,"sources":["C:/Andrey/Desafio/frontend/node_modules/input-core/lib/functions/removeSelectedRange.js"],"names":["Object","defineProperty","exports","value","CharTypesEnum_1","require","copyMaskChar","count","maskChar","res","i","push","char","type","CharTypes","MASK","pasteMaskSymbols","maskString","selection","start","end","removeSelectedRange","param","tmp","length","slice","concat","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,eAAe,GAAGC,OAAO,CAAC,4BAAD,CAA7B;;AACA,IAAIC,YAAY,GAAG,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AAC1C,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAApB,EAA2BG,CAAC,EAA5B,EAAgC;AAC5BD,IAAAA,GAAG,CAACE,IAAJ,CAAS;AACLC,MAAAA,IAAI,EAAEJ,QADD;AAELK,MAAAA,IAAI,EAAET,eAAe,CAACU,SAAhB,CAA0BC;AAF3B,KAAT;AAIH;;AACD,SAAON,GAAP;AACH,CATD;;AAUA,IAAIO,gBAAgB,GAAG,UAAUC,UAAV,EAAsBT,QAAtB,EAAgCU,SAAhC,EAA2C;AAC9D,MAAID,UAAJ,EAAgB;AACZ,QAAIR,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAGQ,SAAS,CAACC,KAAvB,EAA8BT,CAAC,GAAGQ,SAAS,CAACE,GAA5C,EAAiDV,CAAC,EAAlD,EAAsD;AAClDD,MAAAA,GAAG,CAACE,IAAJ,CAAS;AACLC,QAAAA,IAAI,EAAEK,UAAU,CAACP,CAAD,CADX;AAELG,QAAAA,IAAI,EAAET,eAAe,CAACU,SAAhB,CAA0BC;AAF3B,OAAT;AAIH;;AACD,WAAON,GAAP;AACH;;AACD,SAAOH,YAAY,CAACY,SAAS,CAACE,GAAV,GAAgBF,SAAS,CAACC,KAA3B,EAAkCX,QAAlC,CAAnB;AACH,CAZD;;AAaA,SAASa,mBAAT,CAA6BC,KAA7B,EAAoC;AAChC,MAAInB,KAAK,GAAGmB,KAAK,CAACnB,KAAlB;AAAA,MAAyBe,SAAS,GAAGI,KAAK,CAACJ,SAA3C;AAAA,MAAsDV,QAAQ,GAAGc,KAAK,CAACd,QAAvE;AAAA,MAAiFS,UAAU,GAAGK,KAAK,CAACL,UAApG;;AACA,MAAIC,SAAS,CAACE,GAAV,GAAgBF,SAAS,CAACC,KAA9B,EAAqC;AACjC,QAAII,GAAG,GAAGL,SAAS,CAACE,GAApB;AACAF,IAAAA,SAAS,CAACE,GAAV,GAAgBF,SAAS,CAACC,KAA1B;AACAD,IAAAA,SAAS,CAACC,KAAV,GAAkBI,GAAlB;AACH;;AACD,MAAIL,SAAS,CAACC,KAAV,KAAoBD,SAAS,CAACE,GAAlC,EAAuC;AACnC,WAAOjB,KAAP;AACH;;AACD,MAAIA,KAAK,CAACqB,MAAN,GAAeN,SAAS,CAACC,KAA7B,EAAoC;AAChC,WAAOhB,KAAK,CACPsB,KADE,CACI,CADJ,EACOP,SAAS,CAACC,KADjB,EAEFO,MAFE,CAEKV,gBAAgB,CAACC,UAAD,EAAaT,QAAb,EAAuBU,SAAvB,CAFrB,EAEwDf,KAAK,CAACsB,KAAN,CAAYP,SAAS,CAACE,GAAtB,EAA2BjB,KAAK,CAACqB,MAAjC,CAFxD,CAAP;AAGH;;AACD,SAAOrB,KAAP;AACH;;AACDD,OAAO,CAACyB,OAAR,GAAkBN,mBAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CharTypesEnum_1 = require(\"../constants/CharTypesEnum\");\nvar copyMaskChar = function (count, maskChar) {\n    var res = [];\n    for (var i = 0; i < count; i++) {\n        res.push({\n            char: maskChar,\n            type: CharTypesEnum_1.CharTypes.MASK,\n        });\n    }\n    return res;\n};\nvar pasteMaskSymbols = function (maskString, maskChar, selection) {\n    if (maskString) {\n        var res = [];\n        for (var i = selection.start; i < selection.end; i++) {\n            res.push({\n                char: maskString[i],\n                type: CharTypesEnum_1.CharTypes.MASK,\n            });\n        }\n        return res;\n    }\n    return copyMaskChar(selection.end - selection.start, maskChar);\n};\nfunction removeSelectedRange(param) {\n    var value = param.value, selection = param.selection, maskChar = param.maskChar, maskString = param.maskString;\n    if (selection.end < selection.start) {\n        var tmp = selection.end;\n        selection.end = selection.start;\n        selection.start = tmp;\n    }\n    if (selection.start === selection.end) {\n        return value;\n    }\n    if (value.length > selection.start) {\n        return value\n            .slice(0, selection.start)\n            .concat(pasteMaskSymbols(maskString, maskChar, selection), value.slice(selection.end, value.length));\n    }\n    return value;\n}\nexports.default = removeSelectedRange;\n"]},"metadata":{},"sourceType":"script"}