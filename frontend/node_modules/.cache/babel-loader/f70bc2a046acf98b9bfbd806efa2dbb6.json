{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar input_core_1 = require(\"input-core\");\n\nvar KEYBOARD = {\n  BACKSPACE: 8,\n  DELETE: 46\n};\n/**\n * React-MaskInput component\n * Params:\n * `mask`: String. Format:\n *   0 — any number 0-9\n *   * — any symbol\n *   a — A-Z, a-z\n *   q — \"q\" letter, 2 — \"2\" letter etc.\n *   \\a — \"a\" letter\n * default is undefined\n *\n * [function] `reformat`: user function, if you want use custom reformat logic. It's userfull for numeric inputs.\n * If reformat defined mask'll be ignored. Reformat function must receive object with several fields:\n * function reformat({data: data, selection: {start, end}, input}) {\n *     // realisation\n *\n *     return {\n *         [any] value: value that store and calling in input core funcitons (such as reformat). value may have any format,\n *         [String] visibleValue: value that displayed to user in input if showMask is false,\n *         [String] maskedValue: value that  displayed to user in input if showMask is true,\n *         [{[integer] start, [integer] end}] selection: {start, end} — new selection range\n *     }\n * }\n *\n * if `reformat` and `mask` is undefined, input allow to enter any values.\n *\n * You can define custom mask by passing `maskFormat`. This prop must be an array,\n * each object in array have several fields:\n * str: matched char for mask\n * regexp: validation rule as regexp\n * type: special\n *\n * `maskChar`: Character to cover unfilled editable parts of mask. Default value is ''.\n * `maskString`: String to cover unfilled editable parts of mask. Default is undefined. If maskString define maskChar ignored.\n *\n * showMask: show mask in input. It's possible only if mask have not cyclic. Default value = false\n * alwaysShowMask: show mask when input inactive\n *\n * Callbacks:\n *   onValueChange(event). event is:\n *     maskedValue: masked value,\n *     value: value without nessesary mask\n *   getReference: callback to get input ref\n *   onChange(event) where event is a regular React.SyntheticEvent. Using this event you can get access to HTMLElement directly\n * All other props'll passed to input directly\n */\n\nvar MaskInput =\n/** @class */\nfunction (_super) {\n  __extends(MaskInput, _super);\n\n  function MaskInput(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.subscriber = function () {\n      _this.showValue();\n\n      _this.setSelection();\n    };\n\n    _this.showValue = function () {\n      if (_this.state.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        _this.inputEl.value = _this.input.getState().maskedValue;\n        return;\n      }\n\n      _this.inputEl.value = _this.input.getState().visibleValue;\n    };\n\n    _this.setSelection = function () {\n      if (!_this.canSetSelection) {\n        return;\n      }\n\n      var selection = _this.input.getSelection();\n\n      _this.inputEl.setSelectionRange(selection.start, selection.end);\n\n      var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || // @ts-ignore\n      window.mozRequestAnimationFrame || function (fn) {\n        return setTimeout(fn, 0);\n      }; // For android\n\n\n      raf(function () {\n        return _this.inputEl.setSelectionRange(selection.start, selection.end);\n      });\n    };\n\n    _this.onPaste = function (e) {\n      e.preventDefault();\n\n      _this.getSelection(); // getData value needed for IE also works in FF & Chrome\n\n\n      _this.input.paste(e.clipboardData.getData('Text')); // Timeout needed for IE\n\n\n      setTimeout(_this.setSelection, 0);\n\n      _this.dispatchEvent(e);\n    };\n\n    _this.onChange = function (e) {\n      var currentValue;\n\n      if (_this.state.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        currentValue = _this.input.getState().maskedValue;\n      } else {\n        currentValue = _this.input.getState().visibleValue;\n      } // fix conflict by update value in mask model\n\n\n      if (e.target.value !== currentValue) {\n        _this.getSelection();\n\n        _this.input.setValue(e.target.value);\n\n        setTimeout(_this.setSelection, 0);\n      }\n\n      _this.dispatchEvent(e);\n    };\n\n    _this.onKeyPress = function (e) {\n      if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n        return;\n      }\n\n      e.preventDefault();\n\n      _this.getSelection();\n\n      _this.input.input(e.key || e.data || String.fromCharCode(e.which));\n\n      _this.setSelection();\n\n      _this.dispatchEvent(e);\n    };\n\n    _this.onKeyDown = function (e) {\n      if (e.which === KEYBOARD.BACKSPACE) {\n        e.preventDefault();\n\n        _this.getSelection();\n\n        _this.input.removePreviosOrSelected();\n\n        _this.setSelection();\n\n        _this.dispatchEvent(e);\n      }\n\n      if (e.which === KEYBOARD.DELETE) {\n        e.preventDefault();\n\n        _this.getSelection();\n\n        _this.input.removeNextOrSelected();\n\n        _this.setSelection();\n\n        _this.dispatchEvent(e);\n      }\n    };\n\n    _this.onFocus = function (e) {\n      _this.canSetSelection = true;\n      _this.props.onFocus && _this.props.onFocus(e);\n    };\n\n    _this.onBlur = function (e) {\n      _this.canSetSelection = false;\n      _this.props.onBlur && _this.props.onBlur(e);\n    };\n\n    _this.input = input_core_1.createInput({\n      value: props.value || props.defaultValue || '',\n      reformat: props.reformat,\n      maskString: props.maskString,\n      maskChar: props.maskChar || input_core_1.defaults.maskChar,\n      mask: props.mask || undefined,\n      maskFormat: props.maskFormat || input_core_1.defaults.maskFormat\n    });\n    _this.state = {\n      showMask: props.alwaysShowMask || props.showMask\n    };\n    return _this;\n  }\n\n  MaskInput.prototype.componentWillReceiveProps = function (nextProps) {\n    if (this.props.alwaysShowMask !== nextProps.alwaysShowMask || this.props.showMask !== nextProps.showMask) {\n      this.setState({\n        showMask: nextProps.alwaysShowMask || nextProps.showMask\n      });\n    }\n\n    if (nextProps.reformat !== this.props.reformat) {\n      this.input.setReformat(nextProps.reformat);\n    }\n\n    if (nextProps.maskFormat && nextProps.maskFormat !== this.props.maskFormat) {\n      this.input.setMaskFormat(nextProps.maskFormat);\n    }\n\n    if (nextProps.mask !== this.props.mask) {\n      this.input.setMask(nextProps.mask);\n    }\n\n    if (nextProps.maskString !== this.props.maskString) {\n      this.input.setMaskString(nextProps.maskString);\n    }\n\n    if (nextProps.maskChar !== this.props.maskChar) {\n      this.input.setMaskChar(nextProps.maskChar);\n    }\n\n    if (nextProps.value !== this.props.value) {\n      this.input.setValue(nextProps.value);\n    }\n  };\n\n  MaskInput.prototype.componentDidMount = function () {\n    this.input.subscribe(this.subscriber);\n    this.showValue();\n    this.props.getReference && this.props.getReference(this.inputEl);\n  };\n\n  MaskInput.prototype.componentWillUnmount = function () {\n    this.input.unsubscribe(this.subscriber);\n  };\n\n  MaskInput.prototype.dispatchEvent = function (e) {\n    this.props.onChange && this.props.onChange(e);\n\n    var _a = this.input.getState(),\n        maskedValue = _a.maskedValue,\n        visibleValue = _a.visibleValue;\n\n    this.props.onValueChange && this.props.onValueChange({\n      maskedValue: maskedValue,\n      value: visibleValue\n    });\n  };\n\n  MaskInput.prototype.getSelection = function () {\n    this.input.setSelection({\n      start: this.inputEl.selectionStart,\n      end: this.inputEl.selectionEnd\n    });\n  };\n\n  MaskInput.prototype.keyPressPropName = function () {\n    if (typeof navigator !== 'undefined' && navigator.userAgent.match(/Android/i)) {\n      return 'onBeforeInput';\n    }\n\n    return 'onKeyPress';\n  };\n\n  MaskInput.prototype.render = function () {\n    var _a;\n\n    var _this = this;\n\n    var _b = this.props,\n        onChange = _b.onChange,\n\n    /* ignore unspecific props for input */\n    onValueChange = _b.onValueChange,\n        mask = _b.mask,\n        getReference = _b.getReference,\n        showMask = _b.showMask,\n        maskChar = _b.maskChar,\n        alwaysShowMask = _b.alwaysShowMask,\n        maskFormat = _b.maskFormat,\n        maskString = _b.maskString,\n        reformat = _b.reformat,\n\n    /* ignore values */\n    value = _b.value,\n        defaultValue = _b.defaultValue,\n        inputProps = __rest(_b, [\"onChange\", \"onValueChange\", \"mask\", \"getReference\", \"showMask\", \"maskChar\", \"alwaysShowMask\", \"maskFormat\", \"maskString\", \"reformat\", \"value\", \"defaultValue\"]);\n\n    var keyPressEvent = (_a = {}, _a[this.keyPressPropName()] = this.onKeyPress, _a);\n    return React.createElement(\"input\", __assign({}, inputProps, {\n      onChange: this.onChange,\n      onKeyDown: this.onKeyDown,\n      onPaste: this.onPaste,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur\n    }, keyPressEvent, {\n      ref: function (el) {\n        return _this.inputEl = el;\n      }\n    }));\n  };\n\n  return MaskInput;\n}(React.Component);\n\nexports.default = MaskInput;","map":{"version":3,"sources":["c:/Andrey/Desafio/frontend/node_modules/react-maskinput/lib/index.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","defineProperty","exports","value","React","require","input_core_1","KEYBOARD","BACKSPACE","DELETE","MaskInput","_super","props","_this","subscriber","showValue","setSelection","state","showMask","canSetSelection","alwaysShowMask","inputEl","input","getState","maskedValue","visibleValue","selection","getSelection","setSelectionRange","start","end","raf","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","fn","setTimeout","onPaste","preventDefault","paste","clipboardData","getData","dispatchEvent","onChange","currentValue","target","setValue","onKeyPress","metaKey","altKey","ctrlKey","key","data","String","fromCharCode","which","onKeyDown","removePreviosOrSelected","removeNextOrSelected","onFocus","onBlur","createInput","defaultValue","reformat","maskString","maskChar","defaults","mask","undefined","maskFormat","componentWillReceiveProps","nextProps","setState","setReformat","setMaskFormat","setMask","setMaskString","setMaskChar","componentDidMount","subscribe","getReference","componentWillUnmount","unsubscribe","_a","onValueChange","selectionStart","selectionEnd","keyPressPropName","navigator","userAgent","match","render","_b","inputProps","keyPressEvent","createElement","ref","el","Component","default"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar input_core_1 = require(\"input-core\");\nvar KEYBOARD = {\n    BACKSPACE: 8,\n    DELETE: 46,\n};\n/**\n * React-MaskInput component\n * Params:\n * `mask`: String. Format:\n *   0 — any number 0-9\n *   * — any symbol\n *   a — A-Z, a-z\n *   q — \"q\" letter, 2 — \"2\" letter etc.\n *   \\a — \"a\" letter\n * default is undefined\n *\n * [function] `reformat`: user function, if you want use custom reformat logic. It's userfull for numeric inputs.\n * If reformat defined mask'll be ignored. Reformat function must receive object with several fields:\n * function reformat({data: data, selection: {start, end}, input}) {\n *     // realisation\n *\n *     return {\n *         [any] value: value that store and calling in input core funcitons (such as reformat). value may have any format,\n *         [String] visibleValue: value that displayed to user in input if showMask is false,\n *         [String] maskedValue: value that  displayed to user in input if showMask is true,\n *         [{[integer] start, [integer] end}] selection: {start, end} — new selection range\n *     }\n * }\n *\n * if `reformat` and `mask` is undefined, input allow to enter any values.\n *\n * You can define custom mask by passing `maskFormat`. This prop must be an array,\n * each object in array have several fields:\n * str: matched char for mask\n * regexp: validation rule as regexp\n * type: special\n *\n * `maskChar`: Character to cover unfilled editable parts of mask. Default value is ''.\n * `maskString`: String to cover unfilled editable parts of mask. Default is undefined. If maskString define maskChar ignored.\n *\n * showMask: show mask in input. It's possible only if mask have not cyclic. Default value = false\n * alwaysShowMask: show mask when input inactive\n *\n * Callbacks:\n *   onValueChange(event). event is:\n *     maskedValue: masked value,\n *     value: value without nessesary mask\n *   getReference: callback to get input ref\n *   onChange(event) where event is a regular React.SyntheticEvent. Using this event you can get access to HTMLElement directly\n * All other props'll passed to input directly\n */\nvar MaskInput = /** @class */ (function (_super) {\n    __extends(MaskInput, _super);\n    function MaskInput(props) {\n        var _this = _super.call(this, props) || this;\n        _this.subscriber = function () {\n            _this.showValue();\n            _this.setSelection();\n        };\n        _this.showValue = function () {\n            if (_this.state.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n                _this.inputEl.value = _this.input.getState().maskedValue;\n                return;\n            }\n            _this.inputEl.value = _this.input.getState().visibleValue;\n        };\n        _this.setSelection = function () {\n            if (!_this.canSetSelection) {\n                return;\n            }\n            var selection = _this.input.getSelection();\n            _this.inputEl.setSelectionRange(selection.start, selection.end);\n            var raf = window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame ||\n                // @ts-ignore\n                window.mozRequestAnimationFrame ||\n                (function (fn) { return setTimeout(fn, 0); });\n            // For android\n            raf(function () { return _this.inputEl.setSelectionRange(selection.start, selection.end); });\n        };\n        _this.onPaste = function (e) {\n            e.preventDefault();\n            _this.getSelection();\n            // getData value needed for IE also works in FF & Chrome\n            _this.input.paste(e.clipboardData.getData('Text'));\n            // Timeout needed for IE\n            setTimeout(_this.setSelection, 0);\n            _this.dispatchEvent(e);\n        };\n        _this.onChange = function (e) {\n            var currentValue;\n            if (_this.state.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n                currentValue = _this.input.getState().maskedValue;\n            }\n            else {\n                currentValue = _this.input.getState().visibleValue;\n            }\n            // fix conflict by update value in mask model\n            if (e.target.value !== currentValue) {\n                _this.getSelection();\n                _this.input.setValue(e.target.value);\n                setTimeout(_this.setSelection, 0);\n            }\n            _this.dispatchEvent(e);\n        };\n        _this.onKeyPress = function (e) {\n            if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n                return;\n            }\n            e.preventDefault();\n            _this.getSelection();\n            _this.input.input(e.key || e.data || String.fromCharCode(e.which));\n            _this.setSelection();\n            _this.dispatchEvent(e);\n        };\n        _this.onKeyDown = function (e) {\n            if (e.which === KEYBOARD.BACKSPACE) {\n                e.preventDefault();\n                _this.getSelection();\n                _this.input.removePreviosOrSelected();\n                _this.setSelection();\n                _this.dispatchEvent(e);\n            }\n            if (e.which === KEYBOARD.DELETE) {\n                e.preventDefault();\n                _this.getSelection();\n                _this.input.removeNextOrSelected();\n                _this.setSelection();\n                _this.dispatchEvent(e);\n            }\n        };\n        _this.onFocus = function (e) {\n            _this.canSetSelection = true;\n            _this.props.onFocus && _this.props.onFocus(e);\n        };\n        _this.onBlur = function (e) {\n            _this.canSetSelection = false;\n            _this.props.onBlur && _this.props.onBlur(e);\n        };\n        _this.input = input_core_1.createInput({\n            value: props.value || props.defaultValue || '',\n            reformat: props.reformat,\n            maskString: props.maskString,\n            maskChar: props.maskChar || input_core_1.defaults.maskChar,\n            mask: props.mask || undefined,\n            maskFormat: props.maskFormat || input_core_1.defaults.maskFormat,\n        });\n        _this.state = {\n            showMask: props.alwaysShowMask || props.showMask,\n        };\n        return _this;\n    }\n    MaskInput.prototype.componentWillReceiveProps = function (nextProps) {\n        if (this.props.alwaysShowMask !== nextProps.alwaysShowMask || this.props.showMask !== nextProps.showMask) {\n            this.setState({\n                showMask: nextProps.alwaysShowMask || nextProps.showMask,\n            });\n        }\n        if (nextProps.reformat !== this.props.reformat) {\n            this.input.setReformat(nextProps.reformat);\n        }\n        if (nextProps.maskFormat && nextProps.maskFormat !== this.props.maskFormat) {\n            this.input.setMaskFormat(nextProps.maskFormat);\n        }\n        if (nextProps.mask !== this.props.mask) {\n            this.input.setMask(nextProps.mask);\n        }\n        if (nextProps.maskString !== this.props.maskString) {\n            this.input.setMaskString(nextProps.maskString);\n        }\n        if (nextProps.maskChar !== this.props.maskChar) {\n            this.input.setMaskChar(nextProps.maskChar);\n        }\n        if (nextProps.value !== this.props.value) {\n            this.input.setValue(nextProps.value);\n        }\n    };\n    MaskInput.prototype.componentDidMount = function () {\n        this.input.subscribe(this.subscriber);\n        this.showValue();\n        this.props.getReference && this.props.getReference(this.inputEl);\n    };\n    MaskInput.prototype.componentWillUnmount = function () {\n        this.input.unsubscribe(this.subscriber);\n    };\n    MaskInput.prototype.dispatchEvent = function (e) {\n        this.props.onChange && this.props.onChange(e);\n        var _a = this.input.getState(), maskedValue = _a.maskedValue, visibleValue = _a.visibleValue;\n        this.props.onValueChange && this.props.onValueChange({ maskedValue: maskedValue, value: visibleValue });\n    };\n    MaskInput.prototype.getSelection = function () {\n        this.input.setSelection({\n            start: this.inputEl.selectionStart,\n            end: this.inputEl.selectionEnd,\n        });\n    };\n    MaskInput.prototype.keyPressPropName = function () {\n        if (typeof navigator !== 'undefined' && navigator.userAgent.match(/Android/i)) {\n            return 'onBeforeInput';\n        }\n        return 'onKeyPress';\n    };\n    MaskInput.prototype.render = function () {\n        var _a;\n        var _this = this;\n        var _b = this.props, onChange = _b.onChange, \n        /* ignore unspecific props for input */\n        onValueChange = _b.onValueChange, mask = _b.mask, getReference = _b.getReference, showMask = _b.showMask, maskChar = _b.maskChar, alwaysShowMask = _b.alwaysShowMask, maskFormat = _b.maskFormat, maskString = _b.maskString, reformat = _b.reformat, \n        /* ignore values */\n        value = _b.value, defaultValue = _b.defaultValue, inputProps = __rest(_b, [\"onChange\", \"onValueChange\", \"mask\", \"getReference\", \"showMask\", \"maskChar\", \"alwaysShowMask\", \"maskFormat\", \"maskString\", \"reformat\", \"value\", \"defaultValue\"]);\n        var keyPressEvent = (_a = {}, _a[this.keyPressPropName()] = this.onKeyPress, _a);\n        return (React.createElement(\"input\", __assign({}, inputProps, { onChange: this.onChange, onKeyDown: this.onKeyDown, onPaste: this.onPaste, onFocus: this.onFocus, onBlur: this.onBlur }, keyPressEvent, { ref: function (el) { return (_this.inputEl = el); } })));\n    };\n    return MaskInput;\n}(React.Component));\nexports.default = MaskInput;\n"]},"metadata":{},"sourceType":"script"}